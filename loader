local AimingC = loadstring(game:HttpGet("https://raw.githubusercontent.com/uhflash/aiming/main/settings"))()

-- // Services
local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

-- // Vars
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local CurrentCamera = Workspace.CurrentCamera

local DaHoodSettingsC = {
    SilentAim = false,
    AimLock = true,
    Prediction = 0.165,
    AimLockKeybind = Enum.KeyCode.E
}
getgenv().DaHoodSettingsC = DaHoodSettingsC

getgenv().Lock = {
    Enabled = false
}

getgenv().Checks = {
    Pickup = false,
    Downed = false
}

function AimingC.Check()
    -- // Check A
    if not (AimingC.Enabled == true and AimingC.Selected ~= LocalPlayer and AimingC.SelectedPart ~= nil) then
        return false
    end

    -- // Check if downed
    local Character = AimingC.Character(AimingC.Selected)
    local KOd = Character:WaitForChild("BodyEffects")["K.O"].Value
    local Grabbed = Character:FindFirstChild("GRABBING_CONSTRAINT") ~= nil

    -- // Check B

    if (KOd and getgenv().Checks.Downed) then
        return false
    end

    if (Grabbed and getgenv().Checks.Pickup) then
        return false
    end

    -- //
    return true
end

-- // Hook
local __index
__index = hookmetamethod(game, "__index", function(t, k)
    -- // Check if it trying to get our mouse's hit or target and see if we can use it
    if (t:IsA("Mouse") and (k == "Hit" or k == "Target") and AimingC.Check()) then
        -- // Vars
        local SelectedPart = AimingC.SelectedPart

        -- // Hit/Target
        if (DaHoodSettingsC.SilentAim and (k == "Hit" or k == "Target")) then
            -- // Hit to account prediction
            local Hit = SelectedPart.CFrame + (SelectedPart.Velocity * DaHoodSettingsC.Prediction)

            -- // Return modded val
            return (k == "Hit" and Hit or SelectedPart)
        end
    end

    -- // Return
    return __index(t, k)
end)




getgenv().LockKey = "false"
-- // Aimlock
RunService:BindToRenderStep("AimLock", 0, function()
    if (DaHoodSettingsC.AimLock and AimingC.Check()) then
        if getgenv().LockKey == "true" then
        local SelectedPart = AimingC.SelectedPart

        local Hit = SelectedPart.CFrame + (SelectedPart.Velocity * DaHoodSettingsC.Prediction)
          CurrentCamera.CFrame = CFrame.lookAt(CurrentCamera.CFrame.Position, Hit.Position)
        end
    end
end)
